{"version":3,"sources":["Components/Component/Request/request.ts","Components/Component/Request/requestAuth.ts","State/auth-reducer.ts","Components/Component/Forma/FormaAuth.tsx","State/Reselect/auth-reselect.ts","Components/Login/LoginPage.tsx","Components/Register/RegisterPage.tsx","Components/Sidebar/Sidebar.tsx","Components/Component/Request/requestCategories.ts","Components/Component/Material/Material.ts","State/categories-reducer.ts","State/Reselect/categories-reselect.ts","Components/Categories/Category.tsx","Components/Component/Preloader/Preloader.tsx","Components/Categories/Assortment.tsx","Components/Component/Forma/FormaCategories.tsx","Components/Component/Request/requestPositions.ts","State/positions-reducer.ts","Components/Categories/CategoryForm/PositionsForm/Position.tsx","Components/Component/Forma/FormaPositions.tsx","Components/Categories/CategoryForm/PositionsForm/PositionForm.tsx","State/Reselect/position-reselect.ts","Components/Categories/CategoryForm/PositionsForm/Positions.tsx","Components/Categories/CategoryForm/CategoryForm.tsx","Components/Component/Modal/ListModal.tsx","Components/Order/OrderModal.tsx","Components/Component/Request/requestOrder.ts","State/order-reducer.ts","State/Reselect/order-reselect.ts","Components/Order/Order.tsx","Components/Order/OrderCategories/OrderCategory.tsx","Components/Order/OrderCategories/OrderCategories.tsx","Components/Order/OrderPositions/OrderPosition.tsx","Components/Order/OrderPositions/OrderPositions.tsx","Components/History/HistoryFilter/HistoryFilter.tsx","Components/History/HistoryList/Tbody.tsx","Components/History/HistoryList/HistoryList.tsx","Components/History/HistoryPage.tsx","State/Reselect/analytics-reselect.ts","Components/Component/Request/requestAnalytics.ts","State/analytics-reducer.ts","Components/Analytics/AnalyticsPage.tsx","Components/Overview/OverviewPage.tsx","Components/Header/Header.tsx","Components/Floating/Floating.tsx","App.tsx","serviceWorker.js","redux-state.ts","index.js","Components/Sidebar/Sidbar.module.css","Components/Categories/CategoryForm/CategoryForm.module.css","Components/Analytics/Analytics.module.css","Components/Categories/CategoryForm/PositionsForm/PositionForm.module.css","Components/Categories/CategoryForm/PositionsForm/Positions.module.css"],"names":["instance","axios","create","baseURL","requestAuth","user","post","then","res","data","catch","error","get","delete","initialState","token","message","isDisabled","actions","type","FormPage","namePage","nameBtn","submitForm","formik","useFormik","initialValues","email","password","validate","values","errors","length","test","onSubmit","handleSubmit","className","id","name","onChange","handleChange","onBlur","handleBlur","value","htmlFor","touched","disabled","TokenSelector","state","authPage","IsDisabledAuthSelector","LoginPage","useSelector","dispatch","useDispatch","a","loginThunk","RegisterPage","history","useHistory","registerThunk","push","Sidebar","to","activeClassName","s","active","onClick","requestCategoriesApi","headers","Authorization","categoryId","image","categories","fd","FormData","append","patch","MaterialService","M","toast","html","ref","FloatingActionButton","init","current","updateTextFields","category","imagePreview","isNew","isDisabledC","requestCategories","imageSrc","_id","ImageSelector","categoriesPage","ImagePreviewSelector","IsNewSelector","IsDisabledCSelector","CategorySelector","CategoriesSelector","Category","React","memo","getByIdCategory","map","key","Preloader","Categories","useEffect","updateTextInputs","requestByIdCategory","FormCategories","props","useState","setValidate","e","onNameChange","fieldPhoto","onImageChange","style","textAlign","sendCategory","cn","photo","height","src","alt","requestPositionsApi","position","positionId","positions","isForm","isUpdate","removePosition","isRoot","setPositions","setPosition","isFormAC","isUpaDate","isDisabledAC","removePositionAC","isRootAC","setQuantity","quantity","getPositionsThunk","createPositionsThunk","updatePositionsThunk","Position","removePositionsThunk","item","changeUpDate","cost","FormPositions","changeIsForm","modal","contentModal","min","footer","PositionForm","ofForm","positionThunk","modalOverlay","PositionsSelector","positionsPage","IsFormSelector","IsUpDateSelector","PositionSelector","IsDisabledSelector","Positions","data-target","CategoryForm","currentTarget","files","reader","FileReader","onload","result","readAsDataURL","removeByIdCategory","createCategoriesThunk","updateByIdCategory","ListModal","numberOrder","orderPrice","order","deleteOrder","margin","o","OrderModal","orderModalChange","orderPosition","isBtnCreate","onOrderClick","m","requestOrderApi","start","end","offset","limit","orders","isModal","isBtnComplete","isFilter","isAddProduct","STEP","filter","actionsOrder","IsModalSelector","orderPage","IsFilterSelector","OrderPositionSelector","OrderSelector","IsBtnCompleteSelector","IsBtnCreateSelector","IsAddProductSelector","OrdersSelector","LimitSelector","OffsetSelector","STEPSelector","FilterSelector","OrderPage","p","createOrderThunk","OrderCategory","c","OrderCategories","width","OrderPosition","onQuantityChange","submitOrder","OrderPositions","useParams","HistoryFilter","setSubmitting","isSubmitting","display","Tbody","moment","date","format","list","reduce","total","computePrice","onModal","HistoryList","HistoryPage","isSeeMore","getOrdersThunk","data-tooltip","loadMore","AverageSelector","analyticsPage","average","ChartSelector","chart","GainSelector","gain","OrdersASelector","ordersA","requestAnalyticsAPI","AnalyticsPage","getAnalyticsThunk","gainConfig","labels","label","datasets","backgroundColor","orderConfig","analyticsBlock","OverviewPage","getOverviewThunk","yesterday","Date","setDate","getDate","isHigher","parecent","compare","Header","Floating","floating","useRef","initializeFloatingButton","App","path","render","exact","Boolean","window","location","hostname","match","reducers","combineReducers","action","isOrder","find","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","module","exports"],"mappings":"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","file":"static/js/main.917221ff.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'http://localhost:5000'\r\n})\r\n","import {User} from \"../../../State/auth-reducer\";\r\nimport {instance} from \"./request\";\r\n\r\ntype RequestUserType = {\r\n    token: string\r\n    message: string\r\n}\r\n\r\nexport const requestAuth = {\r\n    postLogin (user: User) {\r\n        return instance.post<RequestUserType>('/api/auth/login', user).then(res => res.data).catch(error => error)\r\n    },\r\n\r\n    postRegister (user: User) {\r\n        return instance.post<RequestUserType>('/api/auth/register', user).then(res => res.data)\r\n    },\r\n\r\n    getToken () {\r\n        return instance.get('/api/auth/').then(res => res.data)\r\n    },\r\n\r\n    removeToken () {\r\n        return instance.delete('/api/auth/').then(res => res.data)\r\n    }\r\n}\r\n\r\n\r\n","import {BaseThunkType, InferActionsTypes} from \"../redux-state\";\r\nimport {requestAuth} from \"../Components/Component/Request/requestAuth\";\r\n\r\nexport type User = {\r\n    email: string\r\n    password: string\r\n}\r\n\r\nlet initialState = {\r\n    token: null as string | null,\r\n    message: null as string | null,\r\n    isDisabled: false\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport const authReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SK/USER/AUTH': {\r\n            return {...state, token: action.token}\r\n        }\r\n        case 'SK/MESSAGE/AUTH': {\r\n            return {...state, message: action.message}\r\n        }\r\n        case 'AUTH/IS/DISABLED': {\r\n            return {...state, isDisabled: action.isDisabled}\r\n        }\r\n        default : return state\r\n    }\r\n}\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\n\r\nexport const actions = {\r\n    loginUser: (token: string | null) => ({type: 'SK/USER/AUTH', token} as const),\r\n    setMessage: (message: string) => ({type: 'SK/MESSAGE/AUTH', message} as const),\r\n    isDisabledAC: (isDisabled: boolean) => ({type: 'AUTH/IS/DISABLED', isDisabled} as const)\r\n}\r\n\r\nexport const loginThunk = (user: User): ThunkType => async (dispatch) => {\r\n    dispatch(actions.isDisabledAC(true))\r\n    let data = await requestAuth.postLogin(user)\r\n    dispatch(actions.loginUser(data.token))\r\n    if(data.message) {\r\n        dispatch(actions.setMessage(data.message))\r\n    }\r\n    dispatch(actions.isDisabledAC(false))\r\n}\r\n\r\nexport const registerThunk = (user: User): ThunkType => async (dispatch) => {\r\n    dispatch(actions.isDisabledAC(true))\r\n    let data = await requestAuth.postRegister(user)\r\n    if(data.message) {\r\n        dispatch(actions.setMessage(data.message))\r\n    }\r\n    dispatch(actions.isDisabledAC(false))\r\n}\r\n\r\nexport const getTokenThunk = (): ThunkType => async (dispatch) => {\r\n    let data = await requestAuth.getToken()\r\n    dispatch(actions.loginUser(data))\r\n}\r\n\r\nexport const removeTokenThunk = (): ThunkType => async (dispatch) => {\r\n    let data = await requestAuth.removeToken()\r\n    dispatch(actions.loginUser(data))\r\n}\r\n","import React from 'react'\r\nimport {useFormik} from \"formik\";\r\nimport {User} from '../../../State/auth-reducer'\r\n\r\ntype PropsType = {\r\n    namePage: string\r\n    nameBtn: string\r\n    isDisabled: boolean\r\n    submitForm: (user: User) => void\r\n}\r\n\r\nexport const FormPage: React.FC<PropsType> = ({namePage, nameBtn, isDisabled, submitForm}) => {\r\n    const onSubmit = (values: User) => {\r\n        const user: User = {\r\n            email: values.email,\r\n            password: values.password\r\n        }\r\n        submitForm(user)\r\n    }\r\n\r\n    const validate = (values: User) => {\r\n        const errors = {} as User\r\n\r\n        if (!values.password) {\r\n            errors.password = 'Required';\r\n        } else if (values.password.length < 6) {\r\n            errors.password = 'Must be 6 characters or more';\r\n        }\r\n\r\n        if (!values.email) {\r\n            errors.email = 'Required';\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n            errors.email = 'Invalid email address';\r\n        }\r\n\r\n        return errors;\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: {email: '', password: ''},\r\n        validate,\r\n        onSubmit\r\n    })\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <div className=\"auth-block\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{namePage}</span>\r\n                        <div className=\"input-field\">\r\n                            <input id=\"email\" type=\"email\" name='email' onChange={formik.handleChange}\r\n                                   onBlur={formik.handleBlur} value={formik.values.email}/>\r\n                            <label htmlFor=\"email\">Email:</label>\r\n                            <span className=\"helper-text red-text\">\r\n                             {formik.touched.email && formik.errors.email ? <span>{formik.errors.email}</span> : null}\r\n                            </span>\r\n\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <input id=\"password\" type=\"password\" name='password' onChange={formik.handleChange}\r\n                                   onBlur={formik.handleBlur} value={formik.values.password}/>\r\n                            <label htmlFor=\"password\">Пароль:</label>\r\n                            <span className=\"helper-text red-text\">\r\n                            {formik.touched.password && formik.errors.password ?\r\n                                <span>{formik.errors.password}</span> : null}\r\n                        </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        <button type='submit' className=\"modal-action btn waves-effect\" disabled={isDisabled}>{nameBtn}</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n","import {AppStateType} from '../../redux-state'\r\n\r\n// export const MessageSelector = (state: AppStateType) => {\r\n//     return state.authPage.message\r\n// }\r\n\r\nexport const TokenSelector = (state: AppStateType) => {\r\n    return state.authPage.token\r\n}\r\n\r\nexport const IsDisabledAuthSelector = (state: AppStateType) => {\r\n    return state.authPage.isDisabled\r\n}","import * as React from 'react'\r\nimport {loginThunk} from \"../../State/auth-reducer\";\r\nimport {FormPage} from \"../Component/Forma/FormaAuth\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {IsDisabledAuthSelector} from \"../../State/Reselect/auth-reselect\";\r\n\r\nexport const LoginPage: React.FC = () => {\r\n    const isDisabled = useSelector(IsDisabledAuthSelector)\r\n    const dispatch = useDispatch()\r\n    const namePage = 'Login in'\r\n    const nameBtn = 'Login'\r\n    return <FormPage namePage={namePage} nameBtn={nameBtn} isDisabled={isDisabled} submitForm={(user) => {\r\n        dispatch(loginThunk(user))\r\n    }}/>\r\n}\r\n","import * as React from 'react'\r\nimport {registerThunk} from \"../../State/auth-reducer\";\r\nimport {FormPage} from \"../Component/Forma/FormaAuth\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {IsDisabledAuthSelector} from \"../../State/Reselect/auth-reselect\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\n\r\nexport const RegisterPage: React.FC = () => {\r\n    const isDisabled = useSelector(IsDisabledAuthSelector)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const namePage = 'Register'\r\n    const nameBtn = 'Create'\r\n    return <FormPage namePage={namePage} nameBtn={nameBtn} isDisabled={isDisabled} submitForm={(user) => {\r\n        dispatch(registerThunk(user))\r\n        history.push('/login')\r\n    }}/>\r\n}\r\n\r\n","import React from 'react'\r\nimport s from './Sidbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {removeTokenThunk} from \"../../State/auth-reducer\";\r\n\r\nexport const Sidebar = () => {\r\n    const dispatch = useDispatch()\r\n    return <ul className=\"sidenav sidenav-fixed a-sidenav\">\r\n        <h4>Newborn</h4>\r\n        <li className=\"bold\"><NavLink to='/overview' className=\"waves-effect waves-orange\" activeClassName={s.active}>Review</NavLink></li>\r\n        <li className=\"bold\"><NavLink to='/analytics' className=\"waves-effect waves-orange\" activeClassName={s.active}>Analytics</NavLink></li>\r\n        <li className=\"bold\"><NavLink to='/history' className=\"waves-effect waves-orange\" activeClassName={s.active}>History</NavLink></li>\r\n        <li className=\"bold\"><NavLink to='/order' className=\"waves-effect waves-orange\" activeClassName={s.active}>Add order</NavLink></li>\r\n        <li className=\"bold \"><NavLink to='/categories' className=\"waves-effect waves-orange\" activeClassName={s.active}>Assortment</NavLink></li>\r\n        <li className=\"bold last\">\r\n            <NavLink to='/login' onClick={() => dispatch(removeTokenThunk())} className=\"waves-effect waves-orange\" activeClassName={s.active}>Log out</NavLink>\r\n        </li>\r\n    </ul>\r\n}\r\n","import {CategoriesType} from \"../../../State/categories-reducer\";\r\nimport {instance} from \"./request\";\r\n\r\nexport const requestCategoriesApi = {\r\n    getCategories (token: string | null) {\r\n        return instance.get('/api/category', {\r\n            headers: {\r\n                Authorization: token\r\n            }\r\n        }).then(res => res.data)\r\n    },\r\n    getByIdCategory (token: string | null, categoryId: string) {\r\n        return instance.get(`/api/category/${categoryId}`, {\r\n            headers: {\r\n                Authorization: token\r\n            }\r\n        }).then(res => res.data)\r\n    },\r\n\r\n    postCategories (token: string | null, image: File | null, categories: CategoriesType) {\r\n        const fd = new FormData()\r\n        if (image) {\r\n            fd.append('image', image, image.name)\r\n        }\r\n        fd.append('name', categories.name)\r\n\r\n        return instance.post('/api/category', fd, {\r\n            headers: {\r\n                'content-type': 'multipart/form-data',\r\n                Authorization: token\r\n            }\r\n        }).then(res => res.data)\r\n    },\r\n\r\n    patchByIdCategory (token: string | null, image: File | null, categories: CategoriesType, categoryId: string) {\r\n        const fd = new FormData()\r\n        if (image) {\r\n            fd.append('image', image, image.name)\r\n        }\r\n        fd.append('name', categories.name)\r\n\r\n        return instance.patch(`/api/category/${categoryId}`, fd, {\r\n            headers: {\r\n                'content-type': 'multipart/form-data',\r\n                Authorization: token\r\n            }\r\n        }).then(res => res.data)\r\n    },\r\n\r\n    deleteByIdCategory (token: string | null, categoryId: string) {\r\n        return instance.delete(`/api/category/${categoryId}`, {\r\n            headers: {\r\n                Authorization: token\r\n            }\r\n        })\r\n    }\r\n}\r\n","import {RefObject} from \"react\";\r\n\r\ndeclare var M: any\r\n\r\nexport class MaterialService {\r\n    static toast(message: string) {\r\n        M.toast({html: message})\r\n    }\r\n\r\n    static initializeFloatingButton(ref: RefObject<HTMLDivElement>) {\r\n        M.FloatingActionButton.init(ref.current)\r\n    }\r\n\r\n    static updateTextInputs() {\r\n        M.updateTextFields()\r\n    }\r\n}\r\n","import {BaseThunkType, InferActionsTypes} from \"../redux-state\";\r\nimport {requestCategoriesApi} from \"../Components/Component/Request/requestCategories\";\r\nimport {MaterialService} from \"../Components/Component/Material/Material\";\r\n\r\nexport type CategoriesType = {\r\n    name: string\r\n    imageSrc: string\r\n    user: string\r\n    _id: string\r\n}\r\n\r\nlet initialState = {\r\n    categories: null as null | Array<CategoriesType>,\r\n    category: {} as CategoriesType,\r\n    image: null as File | null,\r\n    imagePreview: null as null | string,\r\n    isNew: false,\r\n    isDisabledC: false\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const categoriesReducer = (state = initialState, actions: ActionsType): InitialStateType => {\r\n    switch (actions.type) {\r\n        case 'SK/SET/CATEGORIES': {\r\n            return {...state, categories: actions.categories}\r\n        }\r\n        case 'SK/SET/CATEGORY': {\r\n            return {...state, category: actions.category}\r\n        }\r\n        case 'SK/SET/NAME': {\r\n            return {...state, category: {...state.category, name:  actions.name}}\r\n        }\r\n        case 'SK/SET/PHOTO': {\r\n            return {...state, image: actions.image}\r\n        }\r\n        case 'SK/SET/IMAGE_PREVIEW': {\r\n            return {...state, imagePreview: actions.imagePreview}\r\n        }\r\n        case 'SK/IS/NEW': {\r\n            return {...state, isNew: actions.isNew}\r\n        }\r\n        case 'SK/IS/DISABLED': {\r\n            return {...state, isDisabledC: actions.isDisabledC}\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType>\r\n\r\nexport const actions = {\r\n    setCategories: (categories: Array<CategoriesType>) => ({type: 'SK/SET/CATEGORIES', categories} as const),\r\n    setCategory: (category: CategoriesType) => ({type: 'SK/SET/CATEGORY', category} as const),\r\n    setName: (name: string) => ({type: 'SK/SET/NAME', name} as const),\r\n    setPhoto: (image: File | null) => ({type: 'SK/SET/PHOTO', image} as const),\r\n    setImagePreview: (imagePreview: null | string) => ({type: 'SK/SET/IMAGE_PREVIEW', imagePreview} as const),\r\n    isNewCategory: (isNew: boolean) => ({type:'SK/IS/NEW', isNew} as const),\r\n    isDisabledCAC: (isDisabledC: boolean) => ({type:'SK/IS/DISABLED', isDisabledC} as const)\r\n}\r\n\r\nexport const requestCategories = (token: string | null): ThunkType => async (dispatch) => {\r\n    let data = await requestCategoriesApi.getCategories(token)\r\n    dispatch(actions.setCategories(data))\r\n    dispatch(actions.setCategory({name: '', imageSrc: '', user:'', _id: ''}))\r\n    dispatch(actions.isNewCategory(false))\r\n}\r\n\r\nexport const createCategoriesThunk = (token: string | null, image: File | null, categories: CategoriesType): ThunkType => async (dispatch) => {\r\n    dispatch(actions.isDisabledCAC(true))\r\n    let data = await requestCategoriesApi.postCategories(token, image, categories)\r\n    dispatch(actions.setCategory(data))\r\n    dispatch(actions.setImagePreview(null))\r\n    dispatch(actions.isDisabledCAC(false))\r\n    dispatch(actions.isNewCategory(false))\r\n}\r\n\r\nexport const requestByIdCategory = (token: string | null, categoryId: string): ThunkType => async (dispatch) => {\r\n    let data = await requestCategoriesApi.getByIdCategory(token, categoryId)\r\n    dispatch(actions.setCategory(data))\r\n    MaterialService.updateTextInputs()\r\n}\r\n\r\nexport const updateByIdCategory = (token: string | null, image: File | null, categories: CategoriesType, categoryId: string): ThunkType => async (dispatch) => {\r\n    dispatch(actions.isDisabledCAC(true))\r\n    let data = await requestCategoriesApi.patchByIdCategory(token, image, categories, categoryId)\r\n    dispatch(actions.setCategory(data))\r\n    dispatch(actions.setImagePreview(null))\r\n    dispatch(actions.isDisabledCAC(false))\r\n}\r\n\r\nexport const removeByIdCategory = (token: string | null, categoryId: string): ThunkType => async (dispatch) => {\r\n    dispatch(actions.isDisabledCAC(true))\r\n    await requestCategoriesApi.deleteByIdCategory(token, categoryId)\r\n    dispatch(actions.setCategory({name: '', imageSrc: '', user:'', _id: ''}))\r\n    dispatch(actions.isNewCategory(true))\r\n    dispatch(actions.isDisabledCAC(false))\r\n}\r\n","import {AppStateType} from '../../redux-state'\r\n\r\nexport const ImageSelector = (state: AppStateType) => {\r\n    return state.categoriesPage.image\r\n}\r\n\r\nexport const ImagePreviewSelector = (state: AppStateType) => {\r\n    return state.categoriesPage.imagePreview\r\n}\r\n\r\nexport const IsNewSelector = (state: AppStateType) => {\r\n    return state.categoriesPage.isNew\r\n}\r\n\r\nexport const IsDisabledCSelector = (state: AppStateType) => {\r\n    return state.categoriesPage.isDisabledC\r\n}\r\n\r\nexport const CategorySelector = (state: AppStateType) => {\r\n    return state.categoriesPage.category\r\n}\r\n\r\nexport const CategoriesSelector = (state: AppStateType) => {\r\n    return state.categoriesPage.categories\r\n}\r\n\r\n// export const categoriesData = createSelector(CategoriesSelector,\r\n//     (categories) => {\r\n//         return categories.filter(c => true);\r\n// })\r\n","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {CategoriesType} from \"../../State/categories-reducer\";\r\n\r\ntype PropsType = {\r\n    categories: CategoriesType[]\r\n    getByIdCategory: (id: string) => void\r\n}\r\n\r\nexport const Category: React.FC<PropsType> = React.memo(({categories, getByIdCategory}) => {\r\n    return <>\r\n        {categories.length !== 0\r\n            ? categories.map(category => <NavLink key={category._id} className=\"collection-item\" to={'categories/' + category._id}\r\n                         onClick={() => getByIdCategory(category._id)}>\r\n                    {category.name}\r\n                </NavLink>)\r\n            : <div className=\"center\">\r\n                You do not categories\r\n            </div>\r\n        }\r\n    </>\r\n})\r\n","import React from \"react\";\r\n\r\nexport const Preloader = () => {\r\n    return <div className=\"row\">\r\n        <div className=\"col s12 center\">\r\n            <div className=\"preloader-wrapper big active\">\r\n                <div className=\"spinner-layer spinner-blue-only\">\r\n                    <div className=\"circle-clipper left\">\r\n                        <div className=\"circle\"/>\r\n                    </div>\r\n                    <div className=\"gap-patch\">\r\n                        <div className=\"circle\"/>\r\n                    </div>\r\n                    <div className=\"circle-clipper right\">\r\n                        <div className=\"circle\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {actions, requestByIdCategory, requestCategories} from \"../../State/categories-reducer\";\r\nimport {TokenSelector} from \"../../State/Reselect/auth-reselect\";\r\nimport {CategoriesSelector} from \"../../State/Reselect/categories-reselect\";\r\nimport {Category} from \"./Category\";\r\nimport {Preloader} from \"../Component/Preloader/Preloader\";\r\n\r\nexport const Categories: React.FC = () => {\r\n    const token = useSelector(TokenSelector)\r\n    const categories = useSelector(CategoriesSelector)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(requestCategories(token))\r\n    }, [dispatch, token])\r\n    const history = useHistory()\r\n    const routeChange = () => {\r\n        dispatch(actions.isNewCategory(true))\r\n        let path = '/categories/new'\r\n        history.push(path)\r\n    }\r\n    const getByIdCategory = (categoryId: string) => {\r\n        dispatch(requestByIdCategory(token, categoryId))\r\n    }\r\n\r\n    return <>\r\n        <div className=\"page-title\">\r\n            <h4>Categories</h4>\r\n            <button className=\"waves-effect waves-light btn grey darken-1\" onClick={routeChange}>Add categories\r\n            </button>\r\n        </div>\r\n        {!categories ? <Preloader/>\r\n            : categories.length !== 0\r\n                ? <div className=\"row\">\r\n                    <div className=\"col s12\">\r\n                        <div className=\"collection\">\r\n                            <Category categories={categories} getByIdCategory={getByIdCategory}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                : <div className=\"center\">\r\n                    You do not categories\r\n                </div>}\r\n    </>\r\n}\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport s from '../../Categories/CategoryForm/CategoryForm.module.css'\r\nimport cn from 'classnames'\r\n\r\ntype PropsType = {\r\n    name: string\r\n    imageSrc: string\r\n    isDisabledC: boolean\r\n    imagePreview: null | string\r\n    onNameChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n    onImageChange: (e: any) => void\r\n    sendCategory: () => void\r\n}\r\n\r\nexport const FormCategories: React.FC<PropsType> = (props) => {\r\n   const [validate, setValidate] = useState('')\r\n    const onValidate = () => {\r\n        if (!props.name) {\r\n            setValidate('Required')\r\n        } else {\r\n            setValidate('')\r\n        }\r\n    }\r\n\r\n    return <div className=\"row\">\r\n        <div className=\"col s12 l6\">\r\n            <div className=\"input-field\">\r\n                <input id='name' type='text' name='name' value={props.name} onBlur={onValidate} onChange={(e) => {\r\n                    props.onNameChange(e)\r\n                }}/>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <span className=\"helper-text red-text\">\r\n                    {validate && <span>{validate}</span>}\r\n                </span>\r\n            </div>\r\n\r\n            <div className={s.fieldPhoto}>\r\n                <input className=\"dn\" id='file' type='file' name='imageSrc' onChange={props.onImageChange}/>\r\n                <label className=\"waves-effect waves-light btn orange lighten-2 mb2\" htmlFor=\"file\">Upload</label>\r\n            </div>\r\n\r\n            <div style={{textAlign: \"left\"}}>\r\n                <button className=\"waves-effect waves-light btn\" disabled={props.isDisabledC} onClick={props.sendCategory}>\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n        <div className={cn(\"col s12 l4 center\", s.photo)}>\r\n            {props.imagePreview ?\r\n                <img className=\"responsive-img\" style={{height: '200px'}} src={props.imagePreview} alt=''/>\r\n                : <img className=\"responsive-img\" style={{height: '200px'}} src={`/${props.imageSrc}`} alt=''/>}\r\n        </div>\r\n    </div>\r\n}\r\n","import {instance} from \"./request\";\r\nimport {PositionsType} from \"../../../State/positions-reducer\";\r\n\r\nexport const requestPositionsApi = {\r\n    getByIdPositions (token: string | null, categoryId: string) {\r\n        return instance.get(`/api/position/${categoryId}`, {\r\n            headers: {\r\n                Authorization: token\r\n            }\r\n        }).then(res => res.data)\r\n    },\r\n\r\n    postPositions (token: string | null, position: PositionsType) {\r\n        return instance.post('/api/position', position, {\r\n            headers: {\r\n                Authorization: token\r\n            }\r\n        }).then(res => res.data)\r\n    },\r\n\r\n    patchPositions (token: string | null, position: PositionsType) {\r\n        return instance.patch(`/api/position/${position._id}`, position, {\r\n            headers: {\r\n                Authorization: token\r\n            }\r\n        }).then(res => res.data)\r\n    },\r\n\r\n    deletePositions (token: string | null, positionId: string | undefined) {\r\n        return instance.delete(`/api/position/${positionId}`, {\r\n            headers: {\r\n                Authorization: token\r\n            }\r\n        }).then(res => res.data)\r\n    }\r\n}\r\n","import {BaseThunkType, InferActionsTypes} from \"../redux-state\";\r\nimport {requestPositionsApi} from \"../Components/Component/Request/requestPositions\";\r\n\r\nexport type PositionsType = {\r\n    name: string\r\n    cost: number\r\n    user?: string\r\n    category?: string\r\n    _id?: string\r\n    quantity?: number\r\n    positionId?: string | undefined\r\n}\r\n\r\nlet initialState = {\r\n    positions: null as null | Array<PositionsType>,\r\n    position: {} as PositionsType,\r\n    isForm: false,\r\n    isUpdate: false,\r\n    isDisabled: false,\r\n    removePosition: [] as Array<string | undefined>,\r\n    isRoot: false\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const positionsReducer = (state = initialState, actions: ActionsType): InitialStateType => {\r\n    switch (actions.type) {\r\n        case 'SK/SET/POSITIONS': {\r\n            return {...state, positions: actions.positions}\r\n        }\r\n        case 'SK/SET/POSITION': {\r\n            return {...state, position: actions.position}\r\n        }\r\n        case 'SK/IS/FORM': {\r\n            return {...state, isForm: actions.isForm}\r\n        }\r\n        case 'SK/IS/UPDATE': {\r\n            return {...state, isUpdate: actions.isUpdate}\r\n        }\r\n        case 'SK/IS/DISABLED': {\r\n            return {...state, isDisabled: actions.isDisabled}\r\n        }\r\n        case 'SK/REMOVE/POSITION': {\r\n            return {\r\n                ...state, removePosition: actions.removePosition\r\n                    ? [...state.removePosition, actions.positionId]\r\n                    : state.removePosition.filter(id => id !== actions.positionId)\r\n            }\r\n        }\r\n        case 'SK/IS/ROOT': {\r\n            return {...state, isRoot: actions.isRoot}\r\n        }\r\n        case 'SK/SET/QUANTITY': {\r\n            return {\r\n                ...state,\r\n                // @ts-ignore\r\n                positions: state.positions.map(p => {\r\n                    if (p._id === actions.id) {\r\n                        return {...p, quantity: actions.quantity}\r\n                    }\r\n                    return p\r\n                })\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType>\r\n\r\nexport const actions = {\r\n    setPositions: (positions: Array<PositionsType>) => ({type: 'SK/SET/POSITIONS', positions} as const),\r\n    setPosition: (position: PositionsType) => ({type: 'SK/SET/POSITION', position} as const),\r\n    isFormAC: (isForm: boolean) => ({type: 'SK/IS/FORM', isForm} as const),\r\n    isUpaDate: (isUpdate: boolean) => ({type: 'SK/IS/UPDATE', isUpdate} as const),\r\n    isDisabledAC: (isDisabled: boolean) => ({type: 'SK/IS/DISABLED', isDisabled} as const),\r\n    removePositionAC: (removePosition: boolean, positionId: string | undefined) => ({type: 'SK/REMOVE/POSITION', removePosition, positionId} as const),\r\n    isRootAC: (isRoot: boolean) => ({type: 'SK/IS/ROOT', isRoot} as const),\r\n    setQuantity: (id: string | undefined, quantity: number) => ({type: 'SK/SET/QUANTITY', id, quantity} as const)\r\n}\r\n\r\nexport const getPositionsThunk = (token: string | null, categoryId: string): ThunkType => async (dispatch) => {\r\n    dispatch(actions.isRootAC(true))\r\n    let data = await requestPositionsApi.getByIdPositions(token, categoryId)\r\n    dispatch(actions.setPositions(data))\r\n}\r\n\r\nexport const createPositionsThunk = (token: string | null, position: PositionsType): ThunkType => async (dispatch) => {\r\n    dispatch(actions.isDisabledAC(true))\r\n    let data = await requestPositionsApi.postPositions(token, position)\r\n    dispatch(actions.setPosition(data))\r\n    dispatch(actions.isDisabledAC(false))\r\n}\r\n\r\nexport const updatePositionsThunk = (token: string | null, position: PositionsType): ThunkType => async (dispatch) => {\r\n    dispatch(actions.isDisabledAC(true))\r\n    let data = await requestPositionsApi.patchPositions(token, position)\r\n    dispatch(actions.setPosition(data))\r\n    dispatch(actions.isDisabledAC(false))\r\n}\r\n\r\nexport const removePositionsThunk = (token: string | null, positionId: string | undefined): ThunkType => async (dispatch) => {\r\n    dispatch(actions.removePositionAC(true, positionId))\r\n    await requestPositionsApi.deletePositions(token, positionId)\r\n    dispatch(actions.removePositionAC(false, positionId))\r\n}\r\n","import React from \"react\";\r\nimport {actions, getPositionsThunk, PositionsType, removePositionsThunk} from \"../../../../State/positions-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport s from './Positions.module.css'\r\n\r\ntype PropsType = {\r\n    token: string | null\r\n    positions: PositionsType[]\r\n    categoryId: string\r\n}\r\n\r\nexport const Position: React.FC<PropsType> = React.memo(({token, positions, categoryId}) => {\r\n    const dispatch = useDispatch()\r\n    const removePosition = (positionId: string | undefined) => {\r\n        dispatch(removePositionsThunk(token, positionId))\r\n        dispatch(getPositionsThunk(token, categoryId))\r\n    }\r\n    const changeUpDate = (position: PositionsType) => {\r\n        dispatch(actions.setPosition(position))\r\n        dispatch(actions.isUpaDate(true))\r\n    }\r\n\r\n    return <div className=\"collection\">\r\n        {positions.map(position => <a key={position._id} className=\"collection-item collection-item-icon\">\r\n            <span className={s.item} onClick={() => changeUpDate(position)}>\r\n               {position.name} <strong>{position.cost} uah.</strong>\r\n            </span>\r\n            <span>\r\n                <i className=\"material-icons\" onClick={() => removePosition(position._id)}>delete</i>\r\n            </span>\r\n        </a>)}\r\n    </div>\r\n})\r\n","import React, {useEffect} from 'react'\r\nimport {useFormik} from \"formik\";\r\nimport s from '../../Categories/CategoryForm/PositionsForm/PositionForm.module.css'\r\nimport cn from 'classnames'\r\nimport {PositionsType} from \"../../../State/positions-reducer\";\r\nimport {MaterialService} from \"../Material/Material\";\r\n\r\ntype PropsType = {\r\n    name: string\r\n    cost: number\r\n    isDisabled: boolean\r\n    changeIsForm: () => void\r\n    onSubmit: (values: PositionsType) => void\r\n}\r\n\r\ntype Error = {\r\n    name: string\r\n    cost: string\r\n}\r\n\r\nexport const FormPositions: React.FC<PropsType> = ({name, cost, isDisabled, onSubmit, changeIsForm}) => {\r\n\r\n    const validate = (values: PositionsType) => {\r\n        const error = {} as Error\r\n        if (!values.name) {\r\n            error.name = 'Required'\r\n        }\r\n\r\n        if (!values.cost) {\r\n            error.cost = 'The cost have not to less 1'\r\n        }\r\n\r\n        return error\r\n    }\r\n\r\n    useEffect(() => {\r\n        MaterialService.updateTextInputs()\r\n    }, [])\r\n\r\n    const formik = useFormik({\r\n        initialValues: {name, cost},\r\n        validate,\r\n        onSubmit\r\n    })\r\n\r\n    return <form className={s.modal} onSubmit={formik.handleSubmit}>\r\n        <div className={cn(\"modal-content\", s.contentModal)}>\r\n            <h4 className=\"mb1\">Add position</h4>\r\n            <div className=\"input-field\">\r\n                <input id=\"pos-name\" type='text' name='name'\r\n                       onChange={formik.handleChange}\r\n                       onBlur={formik.handleBlur}\r\n                       value={formik.values.name}\r\n                />\r\n                <label htmlFor=\"pos-name\">Name</label>\r\n                <span className=\"helper-text red-text\">\r\n                    {formik.touched.name && formik.errors.name && <span>{formik.errors.name}</span>}\r\n                </span>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <input id=\"pos-cost\" type=\"number\" name='cost' min='1'\r\n                       onChange={formik.handleChange}\r\n                       onBlur={formik.handleBlur}\r\n                       value={formik.values.cost}\r\n                />\r\n                <label htmlFor=\"pos-cost\">Цена</label>\r\n                <span className=\"helper-text red-text\">\r\n                    {formik.touched.cost && formik.errors.cost && <span>{formik.errors.cost}</span>}\r\n                </span>\r\n            </div>\r\n        </div>\r\n        <div className={cn(\"modal-footer\", s.footer)}>\r\n            <button\r\n                type=\"button\"\r\n                className=\"modal-action waves-effect waves-black btn-flat\"\r\n                disabled={isDisabled}\r\n                onClick={changeIsForm}\r\n            >\r\n                Cancel\r\n            </button>\r\n            <button className=\" modal-action btn waves-effect\" type=\"submit\" disabled={isDisabled}>Save</button>\r\n        </div>\r\n    </form>\r\n}\r\n","import React from \"react\";\r\nimport {FormPositions} from \"../../../Component/Forma/FormaPositions\";\r\nimport {PositionsType} from \"../../../../State/positions-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport s from './PositionForm.module.css'\r\n\r\ntype PropsType = {\r\n    isDisabled: boolean\r\n    positionId: string | undefined\r\n    categoryId: string\r\n    token: string | null\r\n    name: string\r\n    cost: number\r\n    ofForm: (isForm: boolean) => void\r\n    positionThunk: (token: string | null, position: PositionsType) => void\r\n}\r\nexport const PositionForm: React.FC<PropsType> = ({isDisabled, positionId, name, cost, categoryId, token, ofForm, positionThunk}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const submit = (values: PositionsType) => {\r\n        const position: PositionsType = {\r\n            _id: positionId,\r\n            name: values.name,\r\n            cost: values.cost,\r\n            category: categoryId,\r\n        }\r\n        dispatch(positionThunk(token, position))\r\n        dispatch(ofForm(false))\r\n    }\r\n    const changeIsForm = () => {\r\n        dispatch(ofForm(false))\r\n    }\r\n    return (\r\n        <div>\r\n            <FormPositions isDisabled={isDisabled} name={name} cost={cost} onSubmit={submit} changeIsForm={changeIsForm}/>\r\n            <div className={s.modalOverlay} onClick={changeIsForm}/>\r\n        </div>\r\n    )\r\n}\r\n","import {AppStateType} from '../../redux-state'\r\n\r\n\r\nexport const PositionsSelector = (state: AppStateType) => {\r\n    return state.positionsPage.positions\r\n}\r\n\r\nexport const IsFormSelector = (state: AppStateType) => {\r\n    return state.positionsPage.isForm\r\n}\r\n\r\nexport const IsUpDateSelector = (state: AppStateType) => {\r\n    return state.positionsPage.isUpdate\r\n}\r\n\r\nexport const PositionSelector = (state: AppStateType) => {\r\n    return state.positionsPage.position\r\n}\r\n\r\nexport const IsDisabledSelector = (state: AppStateType) => {\r\n    return state.positionsPage.isDisabled\r\n}\r\n\r\nexport const RemovePositionSelector = (state: AppStateType) => {\r\n    return state.positionsPage.removePosition\r\n}\r\n\r\nexport const IsRootSelector = (state: AppStateType) => {\r\n    return state.positionsPage.isRoot\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport {Position} from \"./Position\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport {\r\n    actions,\r\n    createPositionsThunk,\r\n    getPositionsThunk,\r\n    updatePositionsThunk\r\n} from \"../../../../State/positions-reducer\";\r\nimport {PositionForm} from \"./PositionForm\";\r\nimport {\r\n    IsDisabledSelector,\r\n    IsFormSelector,\r\n    IsUpDateSelector,\r\n    PositionSelector,\r\n    PositionsSelector\r\n} from \"../../../../State/Reselect/position-reselect\";\r\nimport {TokenSelector} from \"../../../../State/Reselect/auth-reselect\";\r\nimport {Preloader} from \"../../../Component/Preloader/Preloader\";\r\n\r\ntype PropsType = {\r\n    categoryId: string\r\n}\r\n\r\nexport const Positions: React.FC<PropsType> = React.memo(({categoryId}) => {\r\n    const isForm = useSelector(IsFormSelector)\r\n    const isUpdate = useSelector(IsUpDateSelector)\r\n    const token = useSelector(TokenSelector)\r\n    const positions = useSelector(PositionsSelector)\r\n    const position = useSelector(PositionSelector)\r\n    const isDisabled = useSelector(IsDisabledSelector)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getPositionsThunk(token, categoryId))\r\n    }, [position, token, categoryId, dispatch])\r\n    const changeIsForm = () => {\r\n        dispatch(actions.isFormAC(true))\r\n    }\r\n\r\n    return <>\r\n        <div className=\"row\">\r\n            <div className=\"col s12\">\r\n                <div className=\"page-subtitle\">\r\n                    <h4>Positions:</h4>\r\n                    <button className=\"waves-effect waves-light btn grey darken-1 btn-small modal-trigger\"\r\n                            data-target=\"create-modal\" onClick={changeIsForm}>\r\n                        Add positions\r\n                    </button>\r\n                </div>\r\n                {!positions ? <Preloader/>\r\n                : positions.length !== 0\r\n                    ? <Position positions={positions} token={token} categoryId={categoryId}/>\r\n                    : <div className=\"center\">\r\n                        There are no positions in the category\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n        {isForm && <PositionForm\r\n            isDisabled={isDisabled}\r\n            positionId={position._id}\r\n            name={''}\r\n            cost={1}\r\n            categoryId={categoryId} ofForm={actions.isFormAC}\r\n            token={token} positionThunk={createPositionsThunk}/>}\r\n        {isUpdate && <PositionForm\r\n            isDisabled={isDisabled}\r\n            positionId={position._id}\r\n            name={position.name}\r\n            cost={position.cost}\r\n            categoryId={categoryId} ofForm={actions.isUpaDate}\r\n            token={token} positionThunk={updatePositionsThunk}/>}\r\n    </>\r\n})\r\n","import React, {ChangeEvent} from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {FormCategories} from '../../Component/Forma/FormaCategories'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\nimport {\r\n    actions,\r\n    createCategoriesThunk,\r\n    removeByIdCategory,\r\n    updateByIdCategory\r\n} from '../../../State/categories-reducer'\r\nimport {Positions} from './PositionsForm/Positions'\r\nimport {\r\n    CategorySelector, ImagePreviewSelector,\r\n    ImageSelector,\r\n    IsDisabledCSelector,\r\n    IsNewSelector\r\n} from '../../../State/Reselect/categories-reselect'\r\nimport {TokenSelector} from '../../../State/Reselect/auth-reselect'\r\nimport {Preloader} from \"../../Component/Preloader/Preloader\";\r\n\r\nexport const CategoryForm: React.FC = () => {\r\n    const isNew = useSelector(IsNewSelector)\r\n    const token = useSelector(TokenSelector)\r\n    const image = useSelector(ImageSelector)\r\n    const imagePreview = useSelector(ImagePreviewSelector)\r\n    const category = useSelector(CategorySelector)\r\n    const isDisabledC = useSelector(IsDisabledCSelector)\r\n    const dispatch = useDispatch()\r\n    const onNameChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(actions.setName(e.currentTarget.value))\r\n    }\r\n    const onImageChange = (e: any) => {\r\n        const image = e.currentTarget.files[0]\r\n        const reader = new FileReader()\r\n        reader.onload = () => {\r\n            dispatch(actions.setImagePreview(reader.result as null | string))\r\n        }\r\n        reader.readAsDataURL(image)\r\n\r\n        dispatch(actions.setPhoto(image))\r\n    }\r\n    const sendCreate = () => {\r\n        dispatch(createCategoriesThunk(token, image, category))\r\n    }\r\n    const sendUpdate = () => {\r\n        dispatch(updateByIdCategory(token, image, category, category._id))\r\n    }\r\n    const submitDelete = () => {\r\n        dispatch(removeByIdCategory(token, category._id))\r\n    }\r\n\r\n    return <>\r\n            <div className=\"page-title\">\r\n                <h4>\r\n                    <NavLink to='/categories'>Categories</NavLink>\r\n                    <i className=\"material-icons\">keyboard_arrow_right</i>\r\n                    <span>{isNew ? 'Add ' : 'Editing'} category</span>\r\n                </h4>\r\n                {!isNew && <span>\r\n                    <button className=\"btn btn-small red\" disabled={isDisabledC} onClick={submitDelete}>\r\n                      <i className=\"material-icons\">delete</i>\r\n                    </button>\r\n                </span>}\r\n            </div>\r\n\r\n            {isNew\r\n                ? <FormCategories\r\n                    name={category.name}\r\n                    imageSrc={category.imageSrc}\r\n                    isDisabledC={isDisabledC}\r\n                    imagePreview={imagePreview}\r\n                    onNameChange={onNameChange}\r\n                    onImageChange={onImageChange}\r\n                    sendCategory={sendCreate}\r\n                />\r\n                : <FormCategories\r\n                    name={category.name}\r\n                    imageSrc={category.imageSrc}\r\n                    isDisabledC={isDisabledC}\r\n                    imagePreview={imagePreview}\r\n                    onNameChange={onNameChange}\r\n                    onImageChange={onImageChange}\r\n                    sendCategory={sendUpdate}\r\n                />\r\n            }\r\n            {!isNew ? category._id ? <Positions categoryId={category._id}/> : <Preloader/> : <div/>}\r\n        </>\r\n}\r\n","import React from \"react\";\r\nimport {OrderPosition} from \"../../../State/order-reducer\";\r\n\r\ntype PropsType = {\r\n    numberOrder?: number\r\n    orderPrice: number\r\n    order: Array<OrderPosition>\r\n    deleteOrder?: (id: string | undefined) => void\r\n}\r\n\r\nexport const ListModal: React.FC<PropsType> = ({numberOrder, orderPrice, order, deleteOrder}) => {\r\n    return <div className=\"modal-content\" style={{textAlign: 'left', margin: '20px'}}>\r\n        {numberOrder\r\n            ? <h4 className=\"mb1\">Order №{numberOrder}</h4>\r\n            : <h4 className=\"mb1\">You order</h4>\r\n        }\r\n        <table className=\"highlight\">\r\n            <thead>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Quantity</th>\r\n                <th>Price</th>\r\n                <th/>\r\n            </tr>\r\n            </thead>\r\n\r\n            {order.map(o => <tbody key={o._id}>\r\n            <tr>\r\n                <td>{o.name}</td>\r\n                <td>{o.quantity}</td>\r\n                <td>{o.cost}</td>\r\n                {deleteOrder && <td>\r\n                    <i className=\"material-icons pointer\" onClick={() => deleteOrder(o._id)}>delete</i>\r\n                </td>}\r\n            </tr>\r\n            </tbody>)}\r\n        </table>\r\n        <div className=\"order-summary\">\r\n            <p>Total cost <strong>{orderPrice} uah.</strong></p>\r\n        </div>\r\n    </div>\r\n}\r\n","import React from \"react\";\r\nimport {OrderPosition} from \"../../State/order-reducer\";\r\nimport {ListModal} from \"../Component/Modal/ListModal\";\r\nimport m from '../Categories/CategoryForm/PositionsForm/PositionForm.module.css'\r\nimport cn from 'classnames'\r\n\r\ntype PropsType = {\r\n    orderPrice: number\r\n    orderPosition: Array<OrderPosition>\r\n    isBtnCreate: boolean\r\n    orderModalChange: (isModal: boolean) => void\r\n    deleteOrder: (id: string | undefined) => void\r\n    onOrderClick: () => void\r\n}\r\n\r\nexport const OrderModal: React.FC<PropsType> = ({orderPrice, orderModalChange, orderPosition, isBtnCreate, deleteOrder, onOrderClick}) => {\r\n    return <div className={m.modal}>\r\n        <ListModal orderPrice={orderPrice} order={orderPosition} deleteOrder={deleteOrder}/>\r\n        <div className={cn(\"modal-footer\", m.footer)}>\r\n            <button className=\"modal-action waves-effect waves-black btn-flat\"\r\n                    onClick={() => orderModalChange(false)}>Cancel\r\n            </button>\r\n            <button className=\" modal-action btn waves-effect\" disabled={isBtnCreate} onClick={onOrderClick}>Confirm\r\n            </button>\r\n        </div>\r\n    </div>\r\n}\r\n","import {instance} from \"./request\";\r\nimport {Order} from \"../../../State/order-reducer\";\r\n\r\nexport const requestOrderApi = {\r\n    createOrder (token: string | null, order: Order) {\r\n        debugger\r\n        return instance.post('/api/order', order, {\r\n            headers: {\r\n                Authorization: token\r\n            }\r\n        }).then(res => res.data)\r\n    },\r\n\r\n    getOrder(token: string | null, start: Date | string, end: Date | string, order: number, offset: number, limit: number) {\r\n        return instance.get(`/api/order?start=${start}&end=${end}&order=${order}&offset=${offset}&limit=${limit}`,{\r\n            headers: {\r\n                Authorization: token\r\n            }\r\n        }).then(res => res.data)\r\n    }\r\n}\r\n","import {BaseThunkType, InferActionsTypes} from \"../redux-state\";\r\nimport {requestOrderApi} from \"../Components/Component/Request/requestOrder\";\r\n\r\nexport type Filter = {\r\n    order: number\r\n    start: Date | string\r\n    end: Date | string\r\n}\r\n\r\nexport type OrderPosition = {\r\n    name: string\r\n    cost: number\r\n    user?: string\r\n    category?: string\r\n    _id?: string | undefined\r\n    quantity?: number\r\n}\r\n\r\nexport type Order = {\r\n    date?: Date | undefined\r\n    order?: number\r\n    user?: string\r\n    list: OrderPosition[]\r\n    _id?: string\r\n}\r\n\r\nlet initialState = {\r\n    orderPosition: [] as Array<OrderPosition>,\r\n    order: {} as Order,\r\n    orders: null as null | Array<Order>,\r\n    isModal: false,\r\n    isBtnComplete: true,\r\n    isBtnCreate: false,\r\n    isFilter: false,\r\n    isAddProduct: false,\r\n    STEP: 5,\r\n    limit: 5,\r\n    offset: 0,\r\n    filter: {order: '', start: '', end: ''} as unknown as Filter\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const orderReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SK/SET/ORDER/POSITION': {\r\n            let isOrder = state.orderPosition.find(p => p._id === action.orderPosition._id)\r\n\r\n            return {\r\n                ...state, orderPosition: state.orderPosition.length !==0\r\n                    ? isOrder\r\n                        ? state.orderPosition.map((o) => {\r\n                                if (o._id === action.orderPosition._id) {\r\n                                    return {...o, quantity: action.orderPosition.quantity}\r\n                                }\r\n                                return o\r\n                            })\r\n                        : [...state.orderPosition, action.orderPosition]\r\n                    : [...state.orderPosition, action.orderPosition]\r\n            }\r\n        }\r\n        case 'SK/SET/ORDER': {\r\n            return {...state, order: action.order}\r\n        }\r\n        case 'SK/SET/ORDER/LIST': {\r\n            return {...state, order: {...state.orderPosition, list: action.orderPosition}}\r\n        }\r\n        case 'SK/IS/MODAL': {\r\n            return {...state, isModal: action.isModal}\r\n        }\r\n        case 'SK/DELETE/ORDER': {\r\n            return {...state, orderPosition: state.orderPosition.filter(p => p._id!== action.id)}\r\n        }\r\n        case 'SK/DELETE/ORDERS': {\r\n            return {...state, orderPosition: action.orderPosition}\r\n        }\r\n        case 'SK/IS/BTN/COMPLETE': {\r\n            return {...state, isBtnComplete: action.isBtnComplete}\r\n        }\r\n        case 'SK/IS/BTN/CREATE': {\r\n            return {...state, isBtnCreate: action.isBtnCreate}\r\n        }\r\n        case 'SK/SET/ORDERS': {\r\n            return {...state, orders: action.orders}\r\n        }\r\n        case 'SK/SET/OFFSET': {\r\n            return {...state, limit: action.limit}\r\n        }\r\n        case 'SK/IS/FILTER': {\r\n            return {...state, isFilter: action.isFilter}\r\n        }\r\n        case 'SK/SET/FILTER': {\r\n            return {...state, filter: action.filter}\r\n        }\r\n        case 'ORDER/IS/ADD/PRODUCT': {\r\n            return {...state, isAddProduct: action.isAddProduct}\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\ntype ActionType = InferActionsTypes<typeof actionsOrder>\r\ntype ThunkType = BaseThunkType<ActionType>\r\n\r\nexport const actionsOrder = {\r\n    setOrderPosition: (orderPosition: OrderPosition) => ({type: 'SK/SET/ORDER/POSITION', orderPosition} as const),\r\n    setOrderAC: (order: Order) => ({type: 'SK/SET/ORDER', order} as const),\r\n    setOrder: (orderPosition: Array<OrderPosition>) => ({type: 'SK/SET/ORDER/LIST', orderPosition} as const),\r\n    setOrders: (orders: Array<Order>) => ({type: 'SK/SET/ORDERS', orders} as const),\r\n    isModalAC: (isModal: boolean) => ({type: 'SK/IS/MODAL', isModal} as const),\r\n    isFilterAC: (isFilter: boolean) => ({type: 'SK/IS/FILTER', isFilter} as const),\r\n    setFilter: (filter: Filter) => ({type: 'SK/SET/FILTER', filter} as const),\r\n    isBtnCompleteAC: (isBtnComplete: boolean) => ({type: 'SK/IS/BTN/COMPLETE', isBtnComplete} as const),\r\n    isBtnAC: (isBtnCreate: boolean) => ({type: 'SK/IS/BTN/CREATE', isBtnCreate} as const),\r\n    deleteOrderAC: (id: string | undefined) => ({type: 'SK/DELETE/ORDER', id} as const),\r\n    deleteOrderSAC: (orderPosition: Array<OrderPosition>) => ({type: 'SK/DELETE/ORDERS', orderPosition} as const),\r\n    setLimit: (limit: number) => ({type: 'SK/SET/OFFSET', limit} as const),\r\n    addProduct: (isAddProduct: boolean) => ({type: 'ORDER/IS/ADD/PRODUCT', isAddProduct} as const)\r\n}\r\n\r\nexport const createOrderThunk = (token: string | null, order: Order): ThunkType => async (dispatch) => {\r\n    dispatch(actionsOrder.isBtnAC(true))\r\n    await requestOrderApi.createOrder(token, order)\r\n    dispatch(actionsOrder.deleteOrderSAC([]))\r\n    dispatch(actionsOrder.isBtnCompleteAC(true))\r\n    dispatch(actionsOrder.isModalAC(false))\r\n    dispatch(actionsOrder.isBtnAC(false))\r\n}\r\n\r\nexport const getOrdersThunk = (token: string | null, start: Date | string, end: Date | string, order: number, offset: number, limit: number): ThunkType => async (dispatch) => {\r\n    dispatch(actionsOrder.isBtnAC(true))\r\n    let data = await requestOrderApi.getOrder(token, start, end, order, offset, limit)\r\n    dispatch(actionsOrder.setOrders(data))\r\n    dispatch(actionsOrder.isBtnAC(false))\r\n}\r\n","import {AppStateType} from '../../redux-state'\r\n\r\nexport const IsModalSelector = (state: AppStateType) => {\r\n    return state.orderPage.isModal\r\n}\r\n\r\nexport const IsFilterSelector = (state: AppStateType) => {\r\n    return state.orderPage.isFilter\r\n}\r\n\r\nexport const OrderPositionSelector = (state: AppStateType) => {\r\n    return state.orderPage.orderPosition\r\n}\r\n\r\nexport const OrderSelector = (state: AppStateType) => {\r\n    return state.orderPage.order\r\n}\r\n\r\nexport const IsBtnCompleteSelector = (state: AppStateType) => {\r\n    return state.orderPage.isBtnComplete\r\n}\r\n\r\nexport const IsBtnCreateSelector = (state: AppStateType) => {\r\n    return state.orderPage.isBtnCreate\r\n}\r\n\r\nexport const IsAddProductSelector = (state: AppStateType) => {\r\n    return state.orderPage.isAddProduct\r\n}\r\n\r\nexport const OrdersSelector = (state: AppStateType) => {\r\n    return state.orderPage.orders\r\n}\r\nexport const LimitSelector = (state: AppStateType) => {\r\n    return state.orderPage.limit\r\n}\r\nexport const OffsetSelector = (state: AppStateType) => {\r\n    return state.orderPage.offset\r\n}\r\n\r\nexport const STEPSelector = (state: AppStateType) => {\r\n    return state.orderPage.STEP\r\n}\r\n\r\nexport const FilterSelector = (state: AppStateType) => {\r\n    return state.orderPage.filter\r\n}","import React, {useEffect} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport s from '../Categories/Assortment.module.css'\r\nimport {OrderModal} from \"./OrderModal\";\r\nimport {actionsOrder, createOrderThunk} from \"../../State/order-reducer\";\r\nimport {\r\n    IsAddProductSelector,\r\n    IsBtnCompleteSelector, IsBtnCreateSelector,\r\n    IsModalSelector,\r\n    OrderPositionSelector,\r\n    OrderSelector\r\n} from \"../../State/Reselect/order-reselect\";\r\nimport {TokenSelector} from \"../../State/Reselect/auth-reselect\";\r\nimport m from '../Categories/CategoryForm/PositionsForm/PositionForm.module.css'\r\n\r\n\r\nexport const OrderPage: React.FC = () => {\r\n    const token = useSelector(TokenSelector)\r\n    const isAddProduct = useSelector(IsAddProductSelector)\r\n    const isModal = useSelector(IsModalSelector)\r\n    const orderPosition = useSelector(OrderPositionSelector)\r\n    const order = useSelector(OrderSelector)\r\n    const isBtnComplete = useSelector(IsBtnCompleteSelector)\r\n    const isBtnCreate = useSelector(IsBtnCreateSelector)\r\n    let orderPrice = 0\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(actionsOrder.setOrder(orderPosition))\r\n    }, [dispatch, orderPosition])\r\n    if (orderPosition.length === 0) {\r\n        dispatch(actionsOrder.isBtnCompleteAC(true))\r\n        dispatch(actionsOrder.isModalAC(false))\r\n    }\r\n    const toggleIsRoot = () => {\r\n        dispatch(actionsOrder.addProduct(false))\r\n    }\r\n    const orderModalChange = (isModal: boolean) => {\r\n        dispatch(actionsOrder.isModalAC(isModal))\r\n    }\r\n\r\n    const deleteOrder = (id: string | undefined) => {\r\n        dispatch(actionsOrder.deleteOrderAC(id))\r\n    }\r\n    const onOrderClick = () => {\r\n        dispatch(createOrderThunk(token, order))\r\n    }\r\n\r\n    orderPosition.map((p) => {\r\n        // @ts-ignore\r\n        return orderPrice += p.cost * p.quantity\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"page-title\">\r\n                {!isAddProduct ? <h4>Order</h4>\r\n                    : <h4>\r\n                        <NavLink onClick={toggleIsRoot} to='/order/'>Order</NavLink>\r\n                        <i className=\"material-icons\">keyboard_arrow_right</i>\r\n                        Add product\r\n                    </h4>}\r\n                <button\r\n                    className=\"waves-effect btn grey darken-1 modal-trigger\"\r\n                    disabled={isBtnComplete} onClick={() => orderModalChange(true)}\r\n                >\r\n                    Complete\r\n                </button>\r\n            </div>\r\n\r\n            {isModal && <div>\r\n                <div className={m.modalOverlay} onClick={() => orderModalChange(false)}/>\r\n                <OrderModal\r\n                    orderPrice={orderPrice}\r\n                    orderPosition={orderPosition}\r\n                    isBtnCreate={isBtnCreate}\r\n                    orderModalChange={orderModalChange}\r\n                    deleteOrder={deleteOrder}\r\n                    onOrderClick={onOrderClick}\r\n                />\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {CategoriesType} from \"../../../State/categories-reducer\";\r\n\r\ntype PropsType = {\r\n    categories: CategoriesType[]\r\n    isAddProduct: () => void\r\n}\r\n\r\nexport const OrderCategory: React.FC<PropsType> = React.memo(({categories, isAddProduct}) => {\r\n    return <>\r\n        {categories.map(c => <div key={c._id} className=\"card waves-effect pointer\">\r\n            <NavLink to={'/order/' + c._id} onClick={isAddProduct}>\r\n                <div className=\"center\">\r\n                    <img className=\"responsive-img order-img\" src={`/${c.imageSrc}`} alt=''/>\r\n                </div>\r\n            </NavLink>\r\n            <div className=\"card-content center p10\">\r\n                <h5 className=\"m0\">{c.name}</h5>\r\n            </div>\r\n        </div>)}\r\n    </>\r\n})\r\n","import React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {requestCategories} from \"../../../State/categories-reducer\";\r\nimport {TokenSelector} from \"../../../State/Reselect/auth-reselect\";\r\nimport {CategoriesSelector} from \"../../../State/Reselect/categories-reselect\";\r\nimport {actionsOrder} from \"../../../State/order-reducer\";\r\nimport {OrderCategory} from \"./OrderCategory\";\r\nimport {Preloader} from \"../../Component/Preloader/Preloader\";\r\n\r\nexport const OrderCategories: React.FC = () => {\r\n    const token = useSelector(TokenSelector)\r\n    const categories = useSelector(CategoriesSelector)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(actionsOrder.addProduct(false))\r\n        dispatch(requestCategories(token))\r\n    }, [dispatch, token])\r\n    const isAddProduct = () => {\r\n        dispatch(actionsOrder.addProduct(true))\r\n    }\r\n\r\n    if (!categories) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return <div className=\"frow order-row\">\r\n        {categories.length !== 0\r\n            ? <OrderCategory categories={categories} isAddProduct={isAddProduct}/>\r\n            : <div className=\"center\" style={{width: \"100%\", textAlign: \"center\"}}>\r\n                There are no categories yet.\r\n            </div>\r\n        }\r\n    </div>\r\n}\r\n","import React from 'react'\r\nimport {PositionsType} from \"../../../State/positions-reducer\";\r\nimport s from '../../Component/Modal/ListModal.module.css'\r\nimport addP from './OrderPosition.module.css'\r\ntype PropsType = {\r\n    positions: Array<PositionsType>\r\n    onQuantityChange: (id: string | undefined, quantity: number) => void\r\n    submitOrder: (name: string, cost: number, quantity: number, _id: string | undefined) => void\r\n}\r\nexport const OrderPosition: React.FC<PropsType> = React.memo(({positions, onQuantityChange, submitOrder}) => {\r\n\r\n    return <>\r\n        <table className=\"highlight\">\r\n            <thead>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Cost</th>\r\n                <th>Quantity</th>\r\n                <th/>\r\n            </tr>\r\n            </thead>\r\n\r\n            {positions.map(p => <tbody key={p._id}>\r\n            <tr>\r\n                <td>{p.name}</td>\r\n                <td>{p.cost} uah.</td>\r\n                <td>\r\n                    <div className=\"input-field inline order-position-input\">\r\n                        <input type=\"number\" value={p.quantity ? p.quantity : '1'} min='1' onChange={(e) => onQuantityChange(p._id, +e.currentTarget.value)}/>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    <button className=\"btn waves-effect wavers-light btn-small\" onClick={() => submitOrder(p.name, p.cost, p.quantity ? p.quantity : 1, p._id)}>Add</button>\r\n                </td>\r\n            </tr>\r\n            </tbody>)}\r\n        </table>\r\n    </>\r\n})\r\n","import React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {TokenSelector} from \"../../../State/Reselect/auth-reselect\";\r\nimport {PositionsSelector} from \"../../../State/Reselect/position-reselect\";\r\nimport {actions, getPositionsThunk} from \"../../../State/positions-reducer\";\r\nimport {actionsOrder} from \"../../../State/order-reducer\";\r\nimport {useParams} from 'react-router'\r\nimport {OrderPosition} from \"./OrderPosition\";\r\nimport {Preloader} from \"../../Component/Preloader/Preloader\";\r\n\r\n\r\nexport const OrderPositions: React.FC = () => {\r\n    const token = useSelector(TokenSelector)\r\n    const positions = useSelector(PositionsSelector)\r\n    const {id}: {id: string} = useParams()\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getPositionsThunk(token, id))\r\n    }, [dispatch, token, id])\r\n\r\n    const onQuantityChange = (id: string | undefined, quantity: number) => {\r\n        dispatch(actions.setQuantity(id, quantity))\r\n    }\r\n\r\n    const submitOrder = (name: string, cost: number, quantity: number, _id: string | undefined) => {\r\n        const orderPosition = {\r\n            name: name,\r\n            cost: cost,\r\n            quantity: quantity,\r\n            _id: _id\r\n        }\r\n        dispatch(actionsOrder.setOrderPosition(orderPosition))\r\n        dispatch(actionsOrder.isBtnCompleteAC(false))\r\n    }\r\n\r\n    if (!positions) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {positions.length !== 0\r\n                ? <OrderPosition positions={positions} onQuantityChange={onQuantityChange} submitOrder={submitOrder}/>\r\n                : <div className='center'>\r\n                    <h6>There are no positions in the category</h6>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport {actionsOrder, Filter} from \"../../../State/order-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nexport const HistoryFilter: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const submit = (values: any, {setSubmitting} : {setSubmitting: (isSubmitting: boolean) => void}) => {\r\n        if (values.start < values.end) {\r\n            const filter: Filter = {\r\n                order: values.order,\r\n                start: values.start,\r\n                end: values.end\r\n            }\r\n            dispatch(actionsOrder.setFilter(filter))\r\n        }\r\n        setSubmitting(false)\r\n    }\r\n\r\n    return (\r\n        <Formik initialValues={{order: '', start: '', end: ''}} onSubmit={submit}>\r\n            {({isSubmitting}) => (\r\n                <Form className=\"filter\">\r\n                    <div className=\"fr\">\r\n                        <div className=\"col order\">\r\n                            <div className=\"input-field inline order-position-input\">\r\n                                <Field type=\"number\" id=\"number\" name='order' min=\"1\"/>\r\n                                    <label htmlFor=\"number\">Order number</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col filter-pickers\">\r\n                            <div className=\"input-field\">\r\n                                <Field type=\"date\" name='start' className=\"datepicker\"/>\r\n                                    <label>Start</label>\r\n                            </div>\r\n\r\n                            <div className=\"input-field\">\r\n                                <Field type=\"date\" name='end' className=\"datepicker\"/>\r\n                                    <label>End</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{display: \"block\", textAlign: \"left\"}}>\r\n                        <button type=\"submit\" className=\"btn waves-effect wavers-light btn-small\" disabled={isSubmitting}>Apply filter</button>\r\n                    </div>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {actionsOrder, Order} from \"../../../State/order-reducer\";\r\nimport moment from \"moment\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\ntype PropsType = {\r\n    orders: Array<Order>\r\n}\r\n\r\nexport const Tbody: React.FC<PropsType> = React.memo(({orders}) => {\r\n    const dispatch = useDispatch()\r\n    const onModal = (isModal: boolean, order: Order) => {\r\n        dispatch(actionsOrder.setOrderAC(order))\r\n        dispatch(actionsOrder.isModalAC(isModal))\r\n    }\r\n    const computePrice = (order: Order): number => {\r\n        return order.list.reduce((total, item) => {\r\n            // @ts-ignore\r\n            return total += item.quantity * item.cost\r\n        }, 0)\r\n    }\r\n\r\n    return <>\r\n        {orders.map(order => <tbody key={order._id}>\r\n        <tr>\r\n            <td>{order.order}</td>\r\n            <td>{moment(order.date).format('DD.MM.yyyy')}</td>\r\n            <td>{moment(order.date).format('HH:mm:ss')}</td>\r\n            <td>{computePrice(order)} uah.</td>\r\n            <td>\r\n                <button className=\"btn btn-small grey darken-1\"><i className=\"material-icons\" onClick={() => onModal(true, order)}>open_in_new</i></button>\r\n            </td>\r\n        </tr>\r\n        </tbody>)}\r\n        </>\r\n})\r\n","import React from \"react\";\r\nimport {actionsOrder, Order} from \"../../../State/order-reducer\";\r\nimport {ListModal} from \"../../Component/Modal/ListModal\";\r\nimport m from '../../Categories/CategoryForm/PositionsForm/PositionForm.module.css'\r\nimport cn from 'classnames'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {Tbody} from \"./Tbody\";\r\n\r\ntype PropsType = {\r\n    orderPrice: number\r\n    orders: Array<Order>\r\n    order: Order\r\n    isModal: boolean\r\n}\r\n\r\nexport const HistoryList: React.FC<PropsType> = React.memo(({orderPrice, orders, order, isModal}) => {\r\n    const dispatch = useDispatch()\r\n    const onModal = (isModal: boolean, order: Order) => {\r\n        dispatch(actionsOrder.setOrderAC(order))\r\n        dispatch(actionsOrder.isModalAC(isModal))\r\n    }\r\n    return <div>\r\n        <table className=\"highlight mb2\">\r\n            <thead>\r\n            <tr>\r\n                <th>№</th>\r\n                <th>Data</th>\r\n                <th>Time</th>\r\n                <th>Sum</th>\r\n                <th/>\r\n            </tr>\r\n            </thead>\r\n            <Tbody orders={orders}/>\r\n        </table>\r\n        {isModal && <div>\r\n            <div className={m.modalOverlay}/>\r\n            <div className={m.modal}>\r\n                <ListModal\r\n                    orderPrice={orderPrice}\r\n                    order={order?.list}\r\n                    numberOrder={order.order}\r\n                />\r\n                <div className={cn(\"modal-footer\", m.footer)}>\r\n                    <button\r\n                        className=\"modal-action waves-effect waves-black btn-flat\"\r\n                        onClick={() => onModal(false, {} as Order)}\r\n                    >\r\n                        Close\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>}\r\n    </div>\r\n})\r\n","import React, {useEffect} from 'react'\r\nimport {HistoryFilter} from \"./HistoryFilter/HistoryFilter\";\r\nimport {HistoryList} from \"./HistoryList/HistoryList\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {TokenSelector} from \"../../State/Reselect/auth-reselect\";\r\nimport {\r\n    FilterSelector, IsBtnCreateSelector,\r\n    IsFilterSelector,\r\n    IsModalSelector,\r\n    LimitSelector,\r\n    OffsetSelector,\r\n    OrderSelector, OrdersSelector,\r\n    STEPSelector\r\n} from \"../../State/Reselect/order-reselect\";\r\nimport {actionsOrder, getOrdersThunk} from \"../../State/order-reducer\";\r\nimport {Preloader} from \"../Component/Preloader/Preloader\";\r\n\r\nexport const HistoryPage: React.FC = () => {\r\n    const token = useSelector(TokenSelector)\r\n    const orders = useSelector(OrdersSelector)\r\n    const offset = useSelector(OffsetSelector)\r\n    const limit = useSelector(LimitSelector)\r\n    const isModal = useSelector(IsModalSelector)\r\n    const order = useSelector(OrderSelector)\r\n    const isFilter = useSelector(IsFilterSelector)\r\n    const STEP = useSelector(STEPSelector)\r\n    const filter = useSelector(FilterSelector)\r\n    const isSeeMore = useSelector(IsBtnCreateSelector)\r\n    let orderPrice = 0\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getOrdersThunk(token, filter.start, filter.end, filter.order, offset, limit))\r\n    }, [dispatch, token, filter.start, filter.end, filter.order, offset, limit])\r\n    const loadMore = (limit: number) => {\r\n        limit += STEP\r\n        dispatch(actionsOrder.setLimit(limit))\r\n    }\r\n\r\n    const onFilter = () => {\r\n        dispatch(actionsOrder.isFilterAC(!isFilter))\r\n    }\r\n\r\n    if (order.list) {\r\n        order.list.map((p) => {\r\n            // @ts-ignore\r\n            return orderPrice += p.cost * p.quantity\r\n        })\r\n    }\r\n\r\n    return <>\r\n        <div className=\"page-title\">\r\n            <h4>Order history</h4>\r\n            <button className=\"btn btn-small js-filter tooltipped\" onClick={onFilter} data-tooltip=\"Открыть фильтр\">\r\n                <i className=\"material-icons\">filter_list</i>\r\n            </button>\r\n        </div>\r\n\r\n        {isFilter && <HistoryFilter/>}\r\n\r\n        {!orders ? <Preloader/>\r\n        : orders.length !== 0\r\n            ? <div>\r\n                <HistoryList\r\n                    orderPrice={orderPrice}\r\n                    orders={orders}\r\n                    order={order}\r\n                    isModal={isModal}\r\n                />\r\n\r\n                <div className=\"center mb2\">\r\n                    <button\r\n                        className=\"btn waves-effect grey darken-1 btn-small\"\r\n                        disabled={orders.length < STEP || isSeeMore}\r\n                        onClick={() => loadMore(limit)}\r\n                    >\r\n                        See more\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            : <div className=\"center\">\r\n                There are no orders yet.\r\n            </div>\r\n        }\r\n    </>\r\n}\r\n","import {AppStateType} from \"../../redux-state\";\r\n\r\nexport const AverageSelector = (state: AppStateType) => {\r\n    return state.analyticsPage.average\r\n}\r\nexport const ChartSelector = (state: AppStateType) => {\r\n    return state.analyticsPage.chart\r\n}\r\nexport const GainSelector = (state: AppStateType) => {\r\n    return state.analyticsPage.gain\r\n}\r\nexport const OrdersASelector = (state: AppStateType) => {\r\n    return state.analyticsPage.ordersA\r\n}","import {instance} from \"./request\";\r\nimport {AnalyticsChartItem, OverviewPageItem} from \"../../../State/analytics-reducer\";\r\n\r\ntype RequestAnalyticsType = {\r\n    average: number,\r\n    chart: Array<AnalyticsChartItem>\r\n}\r\n\r\ntype RequestOverview = {\r\n    gain: OverviewPageItem\r\n    orders: OverviewPageItem\r\n}\r\n\r\nexport const requestAnalyticsAPI = {\r\n    getAnalytics (token: string | null) {\r\n        return instance.get<RequestAnalyticsType>('/api/analytics/analytics', {\r\n            headers: {\r\n                Authorization: token\r\n            }\r\n        }).then(res => res.data)\r\n    },\r\n\r\n    getOverview (token: string | null) {\r\n        return instance.get<RequestOverview>('/api/analytics/overview', {\r\n            headers: {\r\n                Authorization: token\r\n            }\r\n        }).then(res => res.data)\r\n    }\r\n}\r\n","import {requestAnalyticsAPI} from \"../Components/Component/Request/requestAnalytics\";\r\nimport {BaseThunkType, InferActionsTypes} from \"../redux-state\";\r\n\r\n\r\nexport type AnalyticsChartItem = {\r\n    gain: number\r\n    order: number\r\n    label: string\r\n}\r\n\r\nexport type OverviewPageItem = {\r\n    parecent: number\r\n    compare: number\r\n    yesterday: number\r\n    isHigher: boolean\r\n}\r\n\r\nlet initialState = {\r\n    average: 0,\r\n    chart: [] as Array<AnalyticsChartItem>,\r\n    gain: {} as OverviewPageItem,\r\n    ordersA: {} as OverviewPageItem\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const analyticsReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'AN/SET/AVERAGE': {\r\n            return {...state, average: action.average}\r\n        }\r\n        case 'AN/SET/CHART': {\r\n            return {...state, chart: action.chart}\r\n        }\r\n        case 'AN/SET/GAIN': {\r\n            return {...state, gain: action.gain}\r\n        }\r\n        case 'AN/SET/ORDERS': {\r\n            return {...state, ordersA: action.ordersA}\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType>\r\n\r\nexport const actions = {\r\n    setAverage: (average: number) => ({type: 'AN/SET/AVERAGE', average} as const),\r\n    setChart: (chart: Array<AnalyticsChartItem>) => ({type: 'AN/SET/CHART', chart} as const),\r\n    setGain: (gain: OverviewPageItem) => ({type: 'AN/SET/GAIN', gain} as const),\r\n    setOrders: (ordersA: OverviewPageItem) => ({type: 'AN/SET/ORDERS', ordersA} as const)\r\n}\r\n\r\nexport const getAnalyticsThunk = (token: string | null): ThunkType => async (dispatch) => {\r\n    let data = await requestAnalyticsAPI.getAnalytics(token)\r\n    dispatch(actions.setAverage(data.average))\r\n    dispatch(actions.setChart(data.chart))\r\n}\r\n\r\nexport const getOverviewThunk = (token: string | null): ThunkType => async (dispatch) => {\r\n    let data = await requestAnalyticsAPI.getOverview(token)\r\n    dispatch(actions.setGain(data.gain))\r\n    dispatch(actions.setOrders(data.orders))\r\n}","import React, {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AverageSelector, ChartSelector} from \"../../State/Reselect/analytics-reselect\";\r\nimport {TokenSelector} from \"../../State/Reselect/auth-reselect\";\r\nimport {getAnalyticsThunk} from \"../../State/analytics-reducer\";\r\nimport {Line} from \"react-chartjs-2\";\r\nimport s from './Analytics.module.css'\r\n\r\nexport const AnalyticsPage: React.FC = () => {\r\n    const token = useSelector(TokenSelector)\r\n    const average = useSelector(AverageSelector)\r\n    const chart = useSelector(ChartSelector)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getAnalyticsThunk(token))\r\n    }, [dispatch, token])\r\n\r\n    const gainConfig: any = {\r\n        labels: chart.map(item => item.label),\r\n        datasets: [\r\n            {\r\n                label: 'Income',\r\n                data: chart.map(item => item.gain),\r\n                backgroundColor: '#26a69a'\r\n            }\r\n        ]\r\n    }\r\n\r\n    const orderConfig: any = {\r\n        labels: chart.map(item => item.label),\r\n        datasets: [\r\n            {\r\n                label: 'Orders',\r\n                data: chart.map(item => item.order),\r\n                backgroundColor: '#26a69a'\r\n            }\r\n        ]\r\n    }\r\n    return <>\r\n        <div className=\"page-title\">\r\n            <h4>Analytics</h4>\r\n        </div>\r\n\r\n        <div className=\"average-price\">\r\n            <p>Average check <strong>{average} uah.</strong></p>\r\n        </div>\r\n\r\n        <div className={s.analyticsBlock}>\r\n            <h4>Income</h4>\r\n            <Line data={gainConfig}/>\r\n        </div>\r\n\r\n        <div className={s.analyticsBlock}>\r\n            <h4>Order</h4>\r\n            <Line data={orderConfig}/>\r\n        </div>\r\n    </>\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {GainSelector, OrdersASelector} from \"../../State/Reselect/analytics-reselect\";\r\nimport {TokenSelector} from \"../../State/Reselect/auth-reselect\";\r\nimport {getOverviewThunk} from \"../../State/analytics-reducer\";\r\nimport moment from \"moment\";\r\nimport s from './Overview.module.css'\r\n\r\nexport const OverviewPage: React.FC = () => {\r\n    const token = useSelector(TokenSelector)\r\n    const gain = useSelector(GainSelector)\r\n    const ordersA = useSelector(OrdersASelector)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getOverviewThunk(token))\r\n    }, [dispatch, token])\r\n    const yesterday = new Date()\r\n    yesterday.setDate(yesterday.getDate() - 1)\r\n    return <>\r\n        <div className=\"page-title\">\r\n            <h4>\r\n                Yesterday`s review (yesterday | {moment(yesterday).format('DD.MM.yyyy')})\r\n            </h4>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n            <div className=\"col s12 l6\">\r\n                <div className=\"card light-blue lighten-2 white-text\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">Income:</span>\r\n                        <h3>{gain.yesterday} uah.</h3>\r\n                        <h3 className=\"green-text text-darken-2 m0 mb1\">\r\n                            <i className=\"material-icons\">{gain.isHigher ? 'arrow_upward' : 'arrow_downward'}</i>\r\n                            {gain.parecent}%\r\n                        </h3>\r\n                        <p>\r\n                            Income your business yesterday on {gain.parecent}%\r\n                            {gain.isHigher ? 'above' : ' lower'} average: {gain.compare} uah. a day\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"col s12 l6\">\r\n                <div className=\"card orange lighten-2 white-text\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">Orders:</span>\r\n                        <h3>{ordersA.yesterday} {ordersA.yesterday > 1 ? 'orders' : 'order'}</h3>\r\n                        <h3 className=\"red-text m0 mb1\">\r\n                            <i className=\"material-icons\">{ordersA.isHigher ? 'arrow_upward' : 'arrow_downward'}</i>\r\n                            {ordersA.parecent}%\r\n                        </h3>\r\n                        <p>\r\n                            Order number yesterday on {ordersA.parecent}% lower average value: {ordersA.yesterday}\r\n                            {ordersA.yesterday > 1 ? 'orders' : ' order'} a day.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n}\r\n","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const Header = () => {\r\n    return <nav>\r\n        <div className=\"nav-wrapper grey darken-1\">\r\n            <NavLink to=\"/login\" className=\"brand-logo\">Newborn</NavLink>\r\n            <ul id=\"nav-mobile\" className=\"right\">\r\n                <li><NavLink  to='/login'>Login in</NavLink></li>\r\n                <li><NavLink to='/register'>Register</NavLink></li>\r\n            </ul>\r\n        </div>\r\n    </nav>\r\n}\r\n","import React, {MutableRefObject, RefObject, useEffect, useRef} from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {MaterialService} from \"../Component/Material/Material\";\r\nimport {actions} from \"../../State/categories-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nexport const Floating = () => {\r\n    const dispatch = useDispatch()\r\n    const floating: MutableRefObject<HTMLDivElement | null | undefined> = useRef()\r\n    useEffect(() => {\r\n        MaterialService.initializeFloatingButton(floating as RefObject<HTMLDivElement>)\r\n    }, [])\r\n\r\n    return <div className=\"fixed-action-btn\" ref={floating as RefObject<HTMLDivElement>}>\r\n    <a className=\"btn-floating btn-large red\">\r\n        <i className=\"large material-icons\">add</i>\r\n    </a>\r\n    <ul>\r\n        <li>\r\n            <NavLink className=\"btn-floating green\" to=\"/order\">\r\n                <i className=\"material-icons\">assignment</i>\r\n            </NavLink>\r\n        </li>\r\n        <li>\r\n            <NavLink className=\"btn-floating blue\" to=\"/categories/new\" onClick={() => dispatch(actions.isNewCategory(true))}>\r\n                <i className=\"material-icons\">list</i>\r\n            </NavLink>\r\n        </li>\r\n    </ul>\r\n</div>\r\n}\r\n","import React, {useEffect} from 'react'\nimport './App.css'\nimport './Components/Component/Style/content.css'\nimport {LoginPage} from \"./Components/Login/LoginPage\";\nimport {RegisterPage} from \"./Components/Register/RegisterPage\";\nimport {BrowserRouter, Redirect, Route} from \"react-router-dom\";\nimport {Sidebar} from \"./Components/Sidebar/Sidebar\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Categories} from \"./Components/Categories/Assortment\";\nimport {getTokenThunk} from \"./State/auth-reducer\";\nimport {CategoryForm} from \"./Components/Categories/CategoryForm/CategoryForm\";\nimport {TokenSelector} from \"./State/Reselect/auth-reselect\";\nimport {OrderPage} from \"./Components/Order/Order\";\nimport {OrderCategories} from \"./Components/Order/OrderCategories/OrderCategories\";\nimport {OrderPositions} from \"./Components/Order/OrderPositions/OrderPositions\";\nimport {HistoryPage} from \"./Components/History/HistoryPage\";\nimport {AnalyticsPage} from \"./Components/Analytics/AnalyticsPage\";\nimport {OverviewPage} from \"./Components/Overview/OverviewPage\";\nimport {Header} from \"./Components/Header/Header\";\nimport {Floating} from \"./Components/Floating/Floating\";\n\nconst App: React.FC = () => {\n    const token = useSelector(TokenSelector)\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(getTokenThunk())\n    }, [dispatch, token])\n    return (\n        <BrowserRouter>\n            {token\n                ? <div>\n                    <Redirect to='/overview'/>\n                    <Sidebar/>\n                    <main className=\"content\">\n                        <Route path='/overview' render={() => <OverviewPage/>}/>\n                        <Route path='/analytics' render={() => <AnalyticsPage/>}/>\n                        <Route path='/history' render={() => <HistoryPage/>}/>\n                        <Route path='/order' render={() => <OrderPage/>}/>\n                        <Route exact path='/order/' render={() => <OrderCategories/>}/>\n                        <Route path='/order/:id' render={() => <OrderPositions/>}/>\n                        <Route exact path='/categories' render={() => <Categories/>}/>\n                        <Route path='/categories/new!' render={() => <CategoryForm/>}/>\n                        <Route path='/categories/:id' render={() => <CategoryForm/>}/>\n                    </main>\n                    <Floating/>\n                </div>\n                : <div>\n                    <Redirect to='/login'/>\n                    <Header/>\n                    <Route path='/login' render={() => <LoginPage/>}/>\n                    <Route path='/register' render={() => <RegisterPage/>}/>\n                </div>\n            }\n        </BrowserRouter>\n    )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {Action, applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport thunk, {ThunkAction} from 'redux-thunk'\r\nimport {authReducer} from \"./State/auth-reducer\";\r\nimport {categoriesReducer} from \"./State/categories-reducer\";\r\nimport {positionsReducer} from \"./State/positions-reducer\";\r\nimport {orderReducer} from \"./State/order-reducer\";\r\nimport {analyticsReducer} from \"./State/analytics-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    authPage: authReducer,\r\n    categoriesPage: categoriesReducer,\r\n    positionsPage: positionsReducer,\r\n    orderPage: orderReducer,\r\n    analyticsPage: analyticsReducer\r\n})\r\n\r\ntype RootReducerType = typeof reducers\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\ntype PropertiesTypes<T> = T extends {[key:string]: infer U} ? U : never\r\nexport type InferActionsTypes<T extends {[key:string]: (...args: any[]) => any}> = ReturnType<PropertiesTypes<T>>\r\n\r\nexport type BaseThunkType<A extends Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk))\r\n\r\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport 'materialize-css/dist/js/materialize'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport {Provider} from 'react-redux'\nimport store from \"./redux-state\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"Sidbar_active__1nxE5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldPhoto\":\"CategoryForm_fieldPhoto__2Sr1r\",\"photo\":\"CategoryForm_photo__2NlNm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"analyticsBlock\":\"Analytics_analyticsBlock__3psS6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalOverlay\":\"PositionForm_modalOverlay__21HON\",\"modal\":\"PositionForm_modal__g6bBo\",\"contentModal\":\"PositionForm_contentModal__2fLtY\",\"footer\":\"PositionForm_footer__qpu_4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Positions_item__Bfxd2\"};"],"sourceRoot":""}